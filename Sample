using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Sample;
using Newtonsoft.Json;



namespace Samples
{
    class Servis
    {
        public string path = "ZKH.json";

        public List<Info> inf { get; set; }

        public Servis()
        {
            File.Exists(path);
            if (File.Exists(path) == false)
            {
                File.Create(path).Close();
            }


            try
            {
                string jsoncontent = File.ReadAllText(path);

                inf = JsonConvert.DeserializeObject<List<Info>>(jsoncontent);

                if (inf == null)
                {
                    inf = new List<Info>();
                }
            }

            catch (Exception ex)
            {
                throw new Exception("Ошибка чтения файла");
            }
        }


        public List<Info> GetPrintStateSumm()
        {

            List<Info> list = inf.ToList().OrderBy(x => x.summ).ToList();
            return list;
        }


        public void GetPrintSeparateService()
        {
            int id = 0;
            foreach (Info info in inf)
            {
                while (id == info.id)
                {
                    id++;
                }
            }

            Console.WriteLine("Вода");
            foreach (Info water in inf)
            {
                for (int size = 0; size <= id; size++)
                {
                    Console.WriteLine(water.water);
                }

            }
            
            Console.WriteLine("Газ");
            foreach (Info gas in inf)
            {
                for (int size = 0; size <= id; size++)
                {
                    Console.WriteLine(gas.gas);
                }

            }
            
            Console.WriteLine("Свет");
            foreach (Info light in inf)
            {
                for (int size = 0; size <= id; size++)
                {
                    Console.WriteLine(light.light);
                }
            }
            
            Console.WriteLine("Отопление");
            foreach (Info heating in inf)
            {
                for (int size = 0; size <= id; size++)
                {
                    Console.WriteLine(heating.heating);
                }

            }
            
        }



        public void Add(Info info)
        {
            try
            {
                info.id = GetId();
                inf.Add(info); // добавим в  лист 
                Save(); // сохраним в  файл 
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        public bool Delete(int id)
        {
            foreach (Info info in inf)     // перебираем 
            {
                if (info.id == id)        // проверяем 
                {
                    inf.Remove(info);     // удаляем 
                    Save();                 // сохраняем 
                    return true;               // выходим 
                }
            }
            return false;                    // если  никого  не  нашли 
        }

        private int GetId()
        {
            if (inf.Count == 0)            // если  список  пустой 
                return 1;                  // то  начнем  с 1 
            else
                return inf.Last().id + 1;  // иначе - последний  элемент  списка  + 1 
        }


        public void Save()
        {
            try
            {
                string contentJson = JsonConvert.SerializeObject(inf); // сериализуем
                File.WriteAllText(path, contentJson); // полноситью  перезаписываем 
            }
            catch (Exception ex)
            {
                throw new Exception("Ошибка записи");
            }

        }
        
        
    }
}

